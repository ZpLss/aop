<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">

    <!--spring mvc 扫描包下的controller-->
    <context:component-scan base-package="com.yhfund" />

    <!--aop注解扫描-->
    <context:component-scan base-package="com.yhfund.aop" />

    <!--开启aop注解方式,默认为false-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <!-- 配置注解驱动 -->
    <mvc:annotation-driven/>

    <!-- 配置视图解析器 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 启动对@AspectJ注解的支持 -->
    <!-- proxy-target-class等于true是强制使用cglib代理，proxy-target-class默认是false，如果你的类实现了接口 就走JDK代理，如果没有，走cglib代理  -->
    <!-- 注：对于单利模式建议使用cglib代理，虽然JDK动态代理比cglib代理速度快，但性能不如cglib -->

    <!--如果不写proxy-target-class="true"这句话也没问题-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->

    <!--&lt;!&ndash;切面&ndash;&gt;-->
    <!--&lt;!&ndash;该类配置为环绕配置 可以获取 被切面函数参数 被切面函数返回值 以及可以改变 被切面函数的返回值&ndash;&gt;-->
    <!--<bean id="beforeAop" class="com.yhfund.bean.impl.BeforAdvice"></bean>-->
    <!--<aop:config proxy-target-class="true">-->
        <!--&lt;!&ndash;定义切点&ndash;&gt;-->
        <!--<aop:pointcut id="aroundPointcutTarget" expression="execution(* cn.com.yhfund.controller..*.*(..))"/>-->
        <!--&lt;!&ndash;定义切面&ndash;&gt;-->
        <!--<aop:aspect id="userAspect" ref="beforeAop">-->
            <!--&lt;!&ndash;通知函数 method 的参数为 ProceedingJoinPoint 类型 该类型为 JoinPoint 的子类 可以通过该对象获取 被切面参数 以及 返回值&ndash;&gt;-->
            <!--<aop:before method="beforNotice" pointcut-ref="aroundPointcutTarget"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <!--<bean id="studentA" class="com.yhfund.bean.impl.StudentA" />-->
    <!--<bean id="beforeAdvice" class="com.yhfund.bean.impl.BeforAdvice" />-->
    <!--<bean id="afterAdvice" class="com.yhfund.bean.impl.AfterAdvice" />-->
    <!--<bean id="roundAdvice" class="com.yhfund.bean.impl.RoundAdvice" />-->

    <!--<bean id="student" class="org.springframework.aop.framework.ProxyFactoryBean">-->
        <!--<property name="proxyInterfaces">-->
            <!--<value>com.yhfund.bean.Student</value>-->
        <!--</property>-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--<value>beforeAdvice</value>-->
                <!--<value>roundAdvice</value>-->
                <!--<value>afterAdvice</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="target">-->
            <!--<ref bean="studentA"/>-->
        <!--</property>-->
    <!--</bean>-->

    <!--配置第三方平台请求日志切面-->
    <!--<bean id="loginHander" class="com.yhfund.bean.impl.LoginHander" />-->
    <!--<aop:config>-->
        <!--<aop:aspect id="logAspect" ref="loginHander">-->
            <!--<aop:pointcut id="logPointCut" expression="execution( * com.yhfund.controller.*.*(..))"/>-->
            <!--<aop:before method="doRound"  pointcut-ref="logPointCut"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->
</beans>